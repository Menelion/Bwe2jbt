#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Bwe2Jbt, version 1.0
# An application converting Window-eyes Braile translation tables to JAWS format
# Written by Menelion Elens√∫le
# http://oire.org/
# Distributed under the GPL license

import sys
import codecs

def parseBwe(filename):
 """ Parses the input .bwe file and returns a list of tuples to be sorted, merged and inserted into the output .jbt file. """
 f=codecs.open(filename, 'rU', 'utf-8')
 result=[] # List of tuples to be returned
 for line in f:
  words=line.split()
  charCode=int(words[0])
  rwords=() # A tuple to be included in the resulting list
  if charCode in xrange(33) or charCode==127: # ASCII 0 to 32 and 127
   rword=u"\\"+words[0]
  elif charCode in xrange(33, 127): # ASCII characters included literally
   rword=words[2]
  else: # Unicode outside of ASCII range
   rword=u"\\"+hex(charCode)
  if len(words)==1: words.append(" ")
  try:
   rwords=(rword, words[1])
  except:
   print "Parse error at "+rword
   sys.exit(1)
  result.append(rwords)
 f.close()
 return result

def makeJbt(tList, oFilename):
 """Takes the list generated by parseBwe and an output filename and writes the jbt file."""
 result="[ANSI]\r\n" # To be written into the output file
 for i,j in tList[:128]:
  # This magic makes an output line look like "\31=45678"
  ch=i if i!=";" else "\\"+str(ord(i))
  result+=ch+"="+j+"\r\n"
 result+="[UNICODE LATIN]\r\n"
 for i,j in tList[128:]:
  l=i.replace("\\0x", "U+").upper()
  result+=l+"="+j+"\r\n"
 f=codecs.open(oFilename, 'w', 'utf-8')
 f.write(result)
 f.close()
 return

def main():
 n=len(sys.argv)-1 # Excluding script name itself
 helpArgs=['/h', '-h', '--help']
 clhelp="Usage: .\bwe2jbt <source file> ([<destination file]>)|(/h|-h|--help)" 
 if (n<1 or n>2):
  print clhelp
  sys.exit(1)
 else:
  if n==1 and sys.argv[1] in helpArgs:
   print clhelp
  else:
   l=parseBwe(sys.argv[1])
   o=sys.argv[1].replace(".bwe", ".jbt") if n==1 else sys.argv[2]
   makeJbt(l, o)



if __name__=='__main__':
 main()